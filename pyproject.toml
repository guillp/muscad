[tool.poetry]
name = "muscad"
version = "0.10.0"
description = "MuSCAD"
authors = ["Guillaume Pujol <guill.p.linux@gmail.com>"]
license = "MIT"
readme = "README.rst"
homepage = "https://github.com/guillp/muscad"
repository = "https://github.com/guillp/muscad"
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[tool.poetry.urls]
Changelog = "https://github.com/guillp/muscad/releases"

[tool.poetry.dependencies]
python = ">=3.8.1"

[tool.poetry.dev-dependencies]
pytest = ">=7"
coverage = {extras = ["toml"], version = ">=7"}
pytest-cov = ">=4"
mypy = ">=1.3"
pre-commit = ">=3"
flake8 = ">=6"
black = ">=23"
flake8-bandit = ">=4"
flake8-bugbear = ">=23"
flake8-docstrings = ">=1.7"
flake8-rst-docstrings = ">=0.3"
pep8-naming = ">=0.13"
pre-commit-hooks = ">=4"

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["muscad"]

[tool.mypy]
strict = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
implicit_reexport = true
disable_error_code = ["attr-defined"]

[tool.docformatter]
recursive = true
wrap-summaries = 120
wrap-descriptions = 120
blank = true

[tool.ruff]
target-version = "py38"
line-length = 120
select = [
    "A",
    "C4",
    "D",
    "DTZ",
    "E",
    "EM",
    "ERA",
    "F",
    "FA",
    "FBT",
    "I",
    "ICN",
    "N",
    "PGH",
    "PLC",
    "PLE",
    "PLW",
    "PTH",
    "Q",
    "RUF",
    "SIM",
    "T",
    "TID",
    "TRY",
    "UP",
    "W",
    "YTT",
]
exclude = [
    "tests"
]
extend-ignore = [
    "D100", "D101", "D102", "D103", "D104", "D105", "E402", "N802", "N803"
]


[tool.ruff.pydocstyle]
convention = "google"
ignore-decorators = ['override']

[tool.ruff.pylint]
max-args = 10

[tool.coverage.report]
show_missing = true
fail_under = 80
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "def main",
    "...",
    "assert False",
    "pytest.skip",
    "pass",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
